1
00:00:00,000 --> 00:00:17,920
Actually, I could show you a load data, what it looks like.

2
00:00:17,920 --> 00:00:25,760
I mean, CSVs are maybe not the most romantic versions of data that we look at all the time.

3
00:00:25,760 --> 00:00:28,820
You don't think people come to our podcast to look at spreadsheets?

4
00:00:28,820 --> 00:00:29,820
I don't know.

5
00:00:29,820 --> 00:00:32,420
I mean, I come to our podcast to look at spreadsheets.

6
00:00:32,420 --> 00:00:38,140
Well, you are pretty special, Beth.

7
00:00:38,140 --> 00:00:47,900
So what we have here in the file headers, and so it's just one way to pass in file information

8
00:00:47,900 --> 00:00:54,860
and associate it with metadata within CellProfiler, this tends to be what we do for, again, like

9
00:00:54,980 --> 00:01:01,620
for more high content things, load data is a convenient way to pass in information, but

10
00:01:01,620 --> 00:01:05,700
there are certainly other ways.

11
00:01:05,700 --> 00:01:17,140
So here, for example, we have in this load data CSV for this channel, or RIDGE-ER, which

12
00:01:17,140 --> 00:01:24,420
is a name that we have given to this because it's the raw image that is staining the endoplasmic

13
00:01:24,420 --> 00:01:26,140
reticulum.

14
00:01:26,140 --> 00:01:30,620
So this is a user-friendly name that we gave it.

15
00:01:30,620 --> 00:01:36,500
And then we passed it this file name, or RIDGE-ER, so this is the name of the file.

16
00:01:36,500 --> 00:01:43,700
And you can see here, it's telling me channel two.

17
00:01:43,700 --> 00:01:49,060
I think it's an important thing that disambiguates here, the ER from other channels, right?

18
00:01:49,060 --> 00:01:59,380
So all of the RNA, we have a CH5, channel five, so that's what's different from the

19
00:01:59,380 --> 00:02:02,020
RNA channels to the ER channels here.

20
00:02:02,020 --> 00:02:04,500
So we're giving it the name of the file and then the path name.

21
00:02:04,500 --> 00:02:07,780
So this is just where I downloaded it to my computer.

22
00:02:07,780 --> 00:02:11,740
It's on my desktop in a folder of images.

23
00:02:11,740 --> 00:02:18,900
So for this row, then each row has its own set of pieces of metadata that we bring along

24
00:02:18,900 --> 00:02:21,820
with it.

25
00:02:21,820 --> 00:02:27,420
And for this little demo, the important piece of metadata that it's going to need to know

26
00:02:27,420 --> 00:02:29,260
is this metadata site.

27
00:02:29,260 --> 00:02:38,300
So this site, also called Field of View, like often used interchangeably, we have, you know,

28
00:02:38,380 --> 00:02:47,180
nine sites within each well, and those, yeah, nine sites taken within each well.

29
00:02:47,180 --> 00:02:54,620
You know, lots of other metadata that's automatically extracted from microscope, you know, information

30
00:02:54,620 --> 00:02:58,740
output from the microscope that we use, you know, have a program.

31
00:02:58,740 --> 00:03:05,340
This is on a Perkin Elmer, so we use PE2 load data, you know, that we can drop that link

32
00:03:05,340 --> 00:03:10,780
in the show notes for anybody else that finds this really exciting, but, you know, that we use

33
00:03:10,780 --> 00:03:17,900
to extract information from metadata that is automatically output with these images and

34
00:03:17,900 --> 00:03:23,020
to get it into this load data format that a cell profiler reads.

35
00:03:23,020 --> 00:03:26,380
But just, you know, this is what it looks like.

36
00:03:26,380 --> 00:03:32,300
Okay, and so here is the load data module just in the start of a pipeline.

37
00:03:32,300 --> 00:03:39,020
And so you notice when we put in load data and have it as a visible, like, using module

38
00:03:39,020 --> 00:03:45,260
that we are using in our pipeline, the normal four input modules go away.

39
00:03:45,260 --> 00:03:50,460
So this takes the place of the, like, the four other input modules, and instead,

40
00:03:50,460 --> 00:03:54,620
all of the information is being passed in through load data.

41
00:03:55,260 --> 00:04:01,900
And we can see here, I have pointed to where I have a load data CSV.

42
00:04:02,620 --> 00:04:10,380
And nicely, you can press this view button and it will pop up, where'd it go?

43
00:04:10,380 --> 00:04:11,020
There we go.

44
00:04:11,820 --> 00:04:17,260
It will pop up here the load data that it has loaded in, which is a really nice way to double

45
00:04:17,260 --> 00:04:18,620
check if things are going funky.

46
00:04:19,340 --> 00:04:25,580
You know, perhaps you've tab separated your file instead of comma separated and it's not

47
00:04:25,580 --> 00:04:29,340
reading it incorrectly or there's something funny going on, it doesn't recognize your header,

48
00:04:29,340 --> 00:04:31,740
like, in the way you've zapped stuff out.

49
00:04:31,740 --> 00:04:36,220
Like, it's really nice to be able to just click the view contents button and you can

50
00:04:36,220 --> 00:04:41,420
see pretty quickly here, like, does this look like a spreadsheet as I expect a spreadsheet to look?

51
00:04:41,420 --> 00:04:42,380
Yes, no.

52
00:04:42,380 --> 00:04:42,940
It does.

53
00:04:42,940 --> 00:04:44,140
Hooray.

54
00:04:44,140 --> 00:04:45,260
Hooray.

55
00:04:45,260 --> 00:04:46,460
It looks like a spreadsheet.

56
00:04:46,860 --> 00:04:48,460
Hooray for spreadsheets.

57
00:04:48,460 --> 00:04:49,260
Hooray.

58
00:04:49,260 --> 00:04:49,900
Hooray.

59
00:04:51,420 --> 00:05:01,820
So, we, other things that you might want to set that are helpful here, generally, we, in most

60
00:05:01,820 --> 00:05:09,180
of our workflows, think of keeping the base image location as none, because we have set in our CSV

61
00:05:09,180 --> 00:05:18,300
that I just showed you, like, the full path to the image that we are working with, but one could

62
00:05:20,380 --> 00:05:26,380
add in a base image location here and then the paths in your low data CSV would be relative to

63
00:05:26,380 --> 00:05:30,380
that base location instead of needing to have the full path.

64
00:05:30,380 --> 00:05:36,700
So, that can be a helpful thing if you want to be able to keep files perhaps organized in a specific

65
00:05:36,700 --> 00:05:44,060
folder, but move that folder around where it is on your computer or the wherever your files you're

66
00:05:44,060 --> 00:05:45,340
accessing are.

67
00:05:45,340 --> 00:05:47,900
And not have to make new spreadsheets every time I'm sold.

68
00:05:47,900 --> 00:05:48,620
Yes, yes.

69
00:05:50,380 --> 00:06:00,860
Also, this can be quite helpful, the image grouping here that we will often be thoughtful

70
00:06:01,660 --> 00:06:06,540
about the images that we are passing as a group here.

71
00:06:07,180 --> 00:06:15,660
And that is especially when we are running, like, we run CellProfiler in a distributed fashion and

72
00:06:15,660 --> 00:06:19,500
headless lots of the time to run very large content things.

73
00:06:19,500 --> 00:06:26,860
And so, particularly here where this is saying to CellProfiler, look at the metadata that we passed

74
00:06:26,940 --> 00:06:35,100
you in this low data CSV, look at the plate column, look at the well column, and use all of the,

75
00:06:36,060 --> 00:06:43,660
you know, a single identifier as plate and well as the image group that you are passing in.

76
00:06:44,460 --> 00:06:50,860
This also comes into play, you know, some modules, modules in particular, like,

77
00:06:51,740 --> 00:06:54,860
for example, illumination correction, it really matters.

78
00:06:55,660 --> 00:06:59,740
You know, there's different types of illumination correction where it will go across your entire

79
00:06:59,740 --> 00:07:02,700
group before it saves something out.

80
00:07:04,540 --> 00:07:11,500
And so, paying attention to what grouping you're passing is important, and that's something you

81
00:07:11,500 --> 00:07:12,220
set here.

82
00:07:13,180 --> 00:07:22,940
You can also use this here, the process just a range of rows, to say, rather than

83
00:07:24,860 --> 00:07:32,940
picking a specific metadata grouping, just say, okay, I want rows, you know, three through 10

84
00:07:32,940 --> 00:07:35,580
of my CSV, just run this little subset for me.

85
00:07:36,460 --> 00:07:44,540
And that can be another handy way to group and process a select amount of your data.

86
00:07:46,540 --> 00:07:51,180
Anything else that you would point out about loading in, Beth?

87
00:07:52,140 --> 00:07:55,740
I think the only thing I would say is the grouping thing can often be very confusing,

88
00:07:55,740 --> 00:08:00,460
but we have, if you look at the group's module tutorials, if you also look at our input module

89
00:08:00,460 --> 00:08:04,460
tutorials, we talk a lot about grouping and when is it important, and when is it completely

90
00:08:04,460 --> 00:08:05,420
unimportant.

91
00:08:05,420 --> 00:08:09,420
So that's a good resource if the whole grouping bit is a bit confusing, but no.

92
00:08:09,420 --> 00:08:09,980
Absolutely.

93
00:08:10,780 --> 00:08:12,220
This seems very simple.

94
00:08:13,660 --> 00:08:15,020
I like having this.

95
00:08:15,020 --> 00:08:17,420
Yeah, yeah, I use it a lot.

96
00:08:17,500 --> 00:08:22,300
I strongly prefer it over the input modules, mostly because I have a historical beef with

97
00:08:22,300 --> 00:08:23,020
names and types.

98
00:08:25,340 --> 00:08:31,020
That, you know, I understand how it works now, but she and I didn't get along very well

99
00:08:31,660 --> 00:08:33,980
when I first started learning how to use cell profiler.

100
00:08:33,980 --> 00:08:40,940
So, you know, and we also strongly recommend load data for when you are working at scale.

101
00:08:41,740 --> 00:08:46,380
So if you don't have just, you know, a small amount of images that fit on your desktop that

102
00:08:46,380 --> 00:08:51,180
you're trying to process, but instead are, you know, working in a distributed fashion,

103
00:08:51,180 --> 00:08:59,020
working in the cloud, working with, you know, many, many, many, many, many images,

104
00:08:59,020 --> 00:09:00,940
which is often the space that I'm working in.

105
00:09:01,820 --> 00:09:07,260
Load data can be a lot easier and better for working, particularly in that regime.

106
00:09:07,260 --> 00:09:07,500
So.

107
00:09:08,780 --> 00:09:12,380
A good tip for that is if you have a pipeline that you've been doing at small scale and then

108
00:09:12,380 --> 00:09:17,340
you want to move to big scale, you can, if you have the regular four modules on,

109
00:09:17,340 --> 00:09:22,300
you don't have load data on, go to file, export, image set listing, and then that will make you

110
00:09:22,300 --> 00:09:26,620
a load data CSV that is shaped the way you eventually want yours to be shaped.

111
00:09:26,620 --> 00:09:29,820
And so if you're not sure, oh gosh, what should the CSV look like?

112
00:09:29,820 --> 00:09:31,420
We have a bunch of public examples.

113
00:09:32,060 --> 00:09:37,260
But if you do this image set listing, it will then also make you a load data compatible CSV

114
00:09:37,260 --> 00:09:39,500
that then you can sort of check out for yourself.

115
00:09:39,500 --> 00:09:41,740
That is a great reminder.

116
00:09:41,740 --> 00:09:44,140
So this is what it looks like to do that.

117
00:09:45,020 --> 00:09:48,380
And as Beth mentioned, we have tons of public examples.

118
00:09:49,420 --> 00:09:56,300
Everything in the cell painting gallery uses load data CSV or includes load data

119
00:09:56,300 --> 00:09:58,060
CSVs for those images.

120
00:09:58,060 --> 00:10:03,420
So I'll drop some links in our show notes about some examples you can go look at for

121
00:10:04,380 --> 00:10:06,780
existing data sets to help orient you further.

122
00:10:08,460 --> 00:10:08,940
Cool.

123
00:10:08,940 --> 00:10:09,820
Thank you for sharing this.

124
00:10:09,820 --> 00:10:10,620
This is great.

125
00:10:10,620 --> 00:10:11,180
Yeah.

126
00:10:11,180 --> 00:10:11,500
Awesome.

127
00:10:11,740 --> 00:10:13,180
Bye.

